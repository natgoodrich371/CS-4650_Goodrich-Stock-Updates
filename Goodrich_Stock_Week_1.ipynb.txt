{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Nathan Goodrich Stock Week 1.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DHcdp9prt1_3"
      },
      "source": [
        "For my fist week of the game, I wanted to study different ways to predict stocks and come up with a potential model to use moving forward. However, all my stock decisions were based off other factors.\n",
        "\n",
        "1. SGMA: One of the statistcs I researched during the week was Price to Book Ratio, and what I found was that stocks that usually deviate from 1 have a chance to be good investments. At the time, this stock had a P to B ratio of 0.7221, and was on the rise for the past month.\n",
        "\n",
        "2. CSCO: Another company that was trending upward after reaching a strong high in the beginning of September. Bigger company with smaller stock price compared to others. Expected to report positive Q1 results.\n",
        "\n",
        "3. Amazon: Wanted to test my luck on a more familiar company. The combination of their stock being on the rise + the fact tht Black Friday and the holiday season was coming up, it was a good opprotunity to invest.\n",
        "\n",
        "4. Sony: Similar to Amazon, stock has been on the rise. I decided to purchase after learning about the impact that news has on stock prices. Given the fact that the new Spider-Man: Far from Home trailer came out + the new Ghostbusters movie released in theaters were signs of rising stock.\n",
        "\n",
        "5. Disney: Despite being recommended to sell stock rather than buy, an article from CNBC encouraged investors to buy now anticpating new heights. My hope is that their new movie Encanto and TV series Hawkeye will help the stock rise and can make me a profit.\n",
        "\n",
        "As stated earlier, I wanted to test out different models and make adjustments before putting them into play. The code below is based off a model I researched online. I used up-to-date stock information on Disney to complete the test. While it hasn't made predictions for the future yet, I plan on finishing that process later on this week."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m91JnemeZW4f"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "import tensorflow as tf"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": "OK"
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "zwX4D1nWZpTZ",
        "outputId": "caa59a1c-d79e-4778-faf6-95d9945f332d"
      },
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-abb7764c-c918-4ab8-b10a-05ac2bfe2138\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-abb7764c-c918-4ab8-b10a-05ac2bfe2138\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving train_data4.csv to train_data4.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VqqfJflwaORT"
      },
      "source": [
        "import io\n",
        "train_data = pd.read_csv(io.BytesIO(uploaded['train_data4.csv']))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XZF2uGSferw2"
      },
      "source": [
        "train_data.drop(columns=['Unnamed: 0'], inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "9BBInvbzaRpQ",
        "outputId": "60bfa9b2-291a-416c-ca6a-e8cead2b4bad"
      },
      "source": [
        "train_data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Close/Last</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-11-17</td>\n",
              "      <td>157.330002</td>\n",
              "      <td>14695500</td>\n",
              "      <td>158.729996</td>\n",
              "      <td>158.889999</td>\n",
              "      <td>156.750000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-11-16</td>\n",
              "      <td>158.830002</td>\n",
              "      <td>15516200</td>\n",
              "      <td>159.059998</td>\n",
              "      <td>160.240005</td>\n",
              "      <td>158.550003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-11-15</td>\n",
              "      <td>158.429993</td>\n",
              "      <td>21285300</td>\n",
              "      <td>160.089996</td>\n",
              "      <td>160.720001</td>\n",
              "      <td>157.660004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-11-12</td>\n",
              "      <td>159.630005</td>\n",
              "      <td>25601300</td>\n",
              "      <td>163.520004</td>\n",
              "      <td>163.610001</td>\n",
              "      <td>158.929993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-11-11</td>\n",
              "      <td>162.110001</td>\n",
              "      <td>62366500</td>\n",
              "      <td>162.889999</td>\n",
              "      <td>163.960007</td>\n",
              "      <td>158.330002</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Date  Close/Last    Volume        Open        High         Low\n",
              "0  2021-11-17  157.330002  14695500  158.729996  158.889999  156.750000\n",
              "1  2021-11-16  158.830002  15516200  159.059998  160.240005  158.550003\n",
              "2  2021-11-15  158.429993  21285300  160.089996  160.720001  157.660004\n",
              "3  2021-11-12  159.630005  25601300  163.520004  163.610001  158.929993\n",
              "4  2021-11-11  162.110001  62366500  162.889999  163.960007  158.330002"
            ]
          },
          "metadata": {},
          "execution_count": 126
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "65Kj55oaagKI"
      },
      "source": [
        "training_set = train_data.iloc[: , 3:4].values"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HVCD6M9NaiWz",
        "outputId": "7bdfe077-4403-4caa-b34d-1be6d1019ecc"
      },
      "source": [
        "training_set"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[158.729996],\n",
              "       [159.059998],\n",
              "       [160.089996],\n",
              "       [163.520004],\n",
              "       [162.889999],\n",
              "       [174.690002],\n",
              "       [176.949997],\n",
              "       [178.690002],\n",
              "       [173.5     ],\n",
              "       [170.029999],\n",
              "       [169.699997],\n",
              "       [170.029999],\n",
              "       [169.210007],\n",
              "       [169.020004],\n",
              "       [169.479996],\n",
              "       [171.770004],\n",
              "       [172.949997],\n",
              "       [169.899994],\n",
              "       [170.570007],\n",
              "       [170.199997],\n",
              "       [170.970001],\n",
              "       [171.440002],\n",
              "       [172.360001],\n",
              "       [175.690002],\n",
              "       [174.070007],\n",
              "       [173.630005],\n",
              "       [173.619995],\n",
              "       [176.020004],\n",
              "       [177.929993],\n",
              "       [177.699997],\n",
              "       [173.      ],\n",
              "       [173.830002],\n",
              "       [175.559998],\n",
              "       [172.279999],\n",
              "       [173.100006],\n",
              "       [174.25    ],\n",
              "       [177.75    ],\n",
              "       [176.630005],\n",
              "       [175.300003],\n",
              "       [174.940002],\n",
              "       [172.940002],\n",
              "       [180.320007],\n",
              "       [179.740005],\n",
              "       [182.910004],\n",
              "       [183.970001],\n",
              "       [182.059998],\n",
              "       [184.960007],\n",
              "       [185.119995],\n",
              "       [186.360001],\n",
              "       [185.149994],\n",
              "       [184.339996],\n",
              "       [181.020004],\n",
              "       [181.820007],\n",
              "       [184.160004],\n",
              "       [181.960007],\n",
              "       [179.25    ],\n",
              "       [180.5     ],\n",
              "       [176.279999],\n",
              "       [178.339996],\n",
              "       [178.160004],\n",
              "       [177.919998],\n",
              "       [177.080002],\n",
              "       [173.      ],\n",
              "       [174.      ],\n",
              "       [175.899994],\n",
              "       [177.149994],\n",
              "       [180.509995],\n",
              "       [186.289993],\n",
              "       [178.089996],\n",
              "       [177.360001],\n",
              "       [176.25    ],\n",
              "       [177.      ],\n",
              "       [177.429993],\n",
              "       [172.490005],\n",
              "       [172.5     ],\n",
              "       [176.020004],\n",
              "       [177.220001],\n",
              "       [177.529999],\n",
              "       [179.809998],\n",
              "       [179.690002],\n",
              "       [178.25    ],\n",
              "       [175.619995],\n",
              "       [175.660004],\n",
              "       [176.699997],\n",
              "       [176.5     ],\n",
              "       [173.699997],\n",
              "       [175.710007],\n",
              "       [184.940002],\n",
              "       [183.449997],\n",
              "       [185.199997],\n",
              "       [184.089996],\n",
              "       [177.710007],\n",
              "       [174.699997],\n",
              "       [170.179993],\n",
              "       [172.860001],\n",
              "       [176.759995],\n",
              "       [177.860001],\n",
              "       [175.350006],\n",
              "       [173.889999],\n",
              "       [176.639999],\n",
              "       [178.5     ],\n",
              "       [178.830002],\n",
              "       [176.130005],\n",
              "       [173.619995],\n",
              "       [174.369995],\n",
              "       [172.130005],\n",
              "       [173.139999],\n",
              "       [174.589996],\n",
              "       [176.009995],\n",
              "       [178.179993],\n",
              "       [177.649994],\n",
              "       [177.449997],\n",
              "       [176.440002],\n",
              "       [176.309998],\n",
              "       [175.970001],\n",
              "       [177.970001],\n",
              "       [175.929993],\n",
              "       [176.270004],\n",
              "       [179.039993],\n",
              "       [180.179993],\n",
              "       [179.509995],\n",
              "       [177.199997],\n",
              "       [176.619995],\n",
              "       [175.600006],\n",
              "       [172.449997],\n",
              "       [172.220001],\n",
              "       [169.210007],\n",
              "       [167.710007],\n",
              "       [170.259995],\n",
              "       [172.699997],\n",
              "       [172.929993],\n",
              "       [178.369995],\n",
              "       [180.699997],\n",
              "       [181.800003],\n",
              "       [185.699997],\n",
              "       [182.      ],\n",
              "       [182.779999],\n",
              "       [185.009995],\n",
              "       [184.869995],\n",
              "       [187.690002],\n",
              "       [184.289993],\n",
              "       [184.800003],\n",
              "       [184.789993],\n",
              "       [184.990005],\n",
              "       [183.960007],\n",
              "       [182.350006],\n",
              "       [184.220001],\n",
              "       [181.289993],\n",
              "       [187.289993],\n",
              "       [187.509995],\n",
              "       [187.570007],\n",
              "       [188.089996],\n",
              "       [185.970001],\n",
              "       [185.589996],\n",
              "       [187.75    ],\n",
              "       [188.169998],\n",
              "       [187.199997],\n",
              "       [189.800003],\n",
              "       [188.5     ],\n",
              "       [191.470001],\n",
              "       [186.429993],\n",
              "       [185.830002],\n",
              "       [183.830002],\n",
              "       [185.240005],\n",
              "       [188.830002],\n",
              "       [181.850006],\n",
              "       [190.059998],\n",
              "       [191.589996],\n",
              "       [193.259995],\n",
              "       [190.919998],\n",
              "       [194.949997],\n",
              "       [193.440002],\n",
              "       [196.100006],\n",
              "       [198.539993],\n",
              "       [196.529999],\n",
              "       [197.380005],\n",
              "       [197.309998],\n",
              "       [200.190002],\n",
              "       [197.309998],\n",
              "       [189.149994],\n",
              "       [189.899994],\n",
              "       [194.630005],\n",
              "       [196.100006],\n",
              "       [193.229996],\n",
              "       [190.070007],\n",
              "       [197.729996],\n",
              "       [197.580002],\n",
              "       [193.589996],\n",
              "       [181.740005],\n",
              "       [184.270004],\n",
              "       [184.789993],\n",
              "       [185.360001],\n",
              "       [187.300003],\n",
              "       [193.      ],\n",
              "       [189.179993],\n",
              "       [189.979996],\n",
              "       [188.169998],\n",
              "       [183.850006],\n",
              "       [181.710007],\n",
              "       [177.589996],\n",
              "       [177.      ],\n",
              "       [173.770004],\n",
              "       [170.839996],\n",
              "       [168.800003],\n",
              "       [166.169998],\n",
              "       [165.009995],\n",
              "       [173.      ],\n",
              "       [171.889999],\n",
              "       [174.      ],\n",
              "       [173.240005],\n",
              "       [175.220001],\n",
              "       [172.100006],\n",
              "       [172.949997],\n",
              "       [177.009995],\n",
              "       [174.399994],\n",
              "       [177.300003],\n",
              "       [177.75    ],\n",
              "       [178.809998],\n",
              "       [179.5     ],\n",
              "       [178.320007],\n",
              "       [176.199997],\n",
              "       [182.259995],\n",
              "       [181.220001],\n",
              "       [178.5     ],\n",
              "       [180.009995],\n",
              "       [175.75    ],\n",
              "       [173.990005],\n",
              "       [172.960007],\n",
              "       [170.      ],\n",
              "       [170.089996],\n",
              "       [173.600006],\n",
              "       [173.820007],\n",
              "       [173.990005],\n",
              "       [170.490005],\n",
              "       [173.800003],\n",
              "       [169.679993],\n",
              "       [153.320007],\n",
              "       [156.289993],\n",
              "       [152.419998],\n",
              "       [153.179993],\n",
              "       [153.690002],\n",
              "       [153.449997],\n",
              "       [149.490005],\n",
              "       [149.570007],\n",
              "       [147.059998],\n",
              "       [149.      ],\n",
              "       [150.270004],\n",
              "       [148.160004],\n",
              "       [142.449997],\n",
              "       [141.710007],\n",
              "       [142.570007],\n",
              "       [144.5     ],\n",
              "       [144.399994],\n",
              "       [141.570007],\n",
              "       [140.899994],\n",
              "       [136.339996],\n",
              "       [141.470001],\n",
              "       [139.970001],\n",
              "       [140.259995],\n",
              "       [126.260002],\n",
              "       [126.779999],\n",
              "       [123.580002],\n",
              "       [121.610001],\n",
              "       [122.239998],\n",
              "       [120.639999],\n",
              "       [118.160004],\n",
              "       [121.010002],\n",
              "       [124.029999],\n",
              "       [127.110001],\n",
              "       [128.100006],\n",
              "       [126.669998],\n",
              "       [124.360001],\n",
              "       [124.580002],\n",
              "       [127.370003],\n",
              "       [127.809998],\n",
              "       [125.      ],\n",
              "       [129.139999],\n",
              "       [129.800003],\n",
              "       [124.900002],\n",
              "       [123.849998],\n",
              "       [123.580002],\n",
              "       [121.949997],\n",
              "       [123.129997],\n",
              "       [123.260002],\n",
              "       [121.989998],\n",
              "       [124.940002],\n",
              "       [123.239998],\n",
              "       [125.919998],\n",
              "       [125.75    ],\n",
              "       [121.360001],\n",
              "       [121.93    ],\n",
              "       [127.07    ],\n",
              "       [125.260002],\n",
              "       [125.980003],\n",
              "       [129.5     ],\n",
              "       [130.550003],\n",
              "       [132.169998],\n",
              "       [131.460007],\n",
              "       [132.529999],\n",
              "       [133.740005],\n",
              "       [133.580002],\n",
              "       [134.279999],\n",
              "       [131.990005],\n",
              "       [133.75    ],\n",
              "       [135.240005],\n",
              "       [133.630005],\n",
              "       [131.919998],\n",
              "       [135.25    ],\n",
              "       [134.5     ],\n",
              "       [133.      ],\n",
              "       [130.      ],\n",
              "       [130.830002],\n",
              "       [128.149994],\n",
              "       [127.720001],\n",
              "       [126.800003],\n",
              "       [129.25    ],\n",
              "       [129.440002],\n",
              "       [130.100006],\n",
              "       [130.009995],\n",
              "       [130.639999],\n",
              "       [130.669998],\n",
              "       [130.529999],\n",
              "       [129.75    ],\n",
              "       [130.220001],\n",
              "       [126.959999],\n",
              "       [123.370003],\n",
              "       [115.959999],\n",
              "       [116.169998],\n",
              "       [115.220001],\n",
              "       [114.910004],\n",
              "       [116.220001],\n",
              "       [115.459999],\n",
              "       [117.199997],\n",
              "       [115.699997],\n",
              "       [118.860001],\n",
              "       [118.190002],\n",
              "       [118.050003],\n",
              "       [118.050003],\n",
              "       [118.900002],\n",
              "       [117.720001],\n",
              "       [121.629997],\n",
              "       [115.230003],\n",
              "       [119.940002],\n",
              "       [116.830002],\n",
              "       [116.510002],\n",
              "       [113.480003],\n",
              "       [113.629997],\n",
              "       [113.830002],\n",
              "       [115.      ],\n",
              "       [112.82    ],\n",
              "       [111.5     ],\n",
              "       [109.      ],\n",
              "       [110.949997],\n",
              "       [108.989998],\n",
              "       [115.849998],\n",
              "       [116.959999],\n",
              "       [114.190002],\n",
              "       [119.980003],\n",
              "       [116.879997],\n",
              "       [118.639999],\n",
              "       [121.239998],\n",
              "       [112.080002],\n",
              "       [115.169998],\n",
              "       [117.599998],\n",
              "       [124.019997],\n",
              "       [125.629997],\n",
              "       [125.099998],\n",
              "       [126.309998],\n",
              "       [121.949997],\n",
              "       [119.989998],\n",
              "       [119.      ],\n",
              "       [117.260002],\n",
              "       [116.190002],\n",
              "       [121.599998],\n",
              "       [123.68    ],\n",
              "       [121.050003],\n",
              "       [117.5     ],\n",
              "       [119.339996],\n",
              "       [116.419998],\n",
              "       [115.099998],\n",
              "       [114.470001],\n",
              "       [104.980003],\n",
              "       [101.980003],\n",
              "       [104.5     ],\n",
              "       [109.059998],\n",
              "       [108.400002],\n",
              "       [109.050003],\n",
              "       [101.849998],\n",
              "       [101.480003],\n",
              "       [101.510002],\n",
              "       [102.010002],\n",
              "       [106.360001],\n",
              "       [109.440002],\n",
              "       [109.940002],\n",
              "       [108.790001],\n",
              "       [102.      ],\n",
              "       [101.779999],\n",
              "       [100.650002],\n",
              "       [101.800003],\n",
              "       [100.010002],\n",
              "       [103.580002],\n",
              "       [106.209999],\n",
              "       [103.529999],\n",
              "       [104.389999],\n",
              "       [105.5     ],\n",
              "       [104.709999],\n",
              "       [107.919998],\n",
              "       [100.529999],\n",
              "       [104.860001],\n",
              "       [ 97.260002],\n",
              "       [ 96.309998],\n",
              "       [ 94.199997],\n",
              "       [ 93.5     ],\n",
              "       [100.220001],\n",
              "       [ 96.      ],\n",
              "       [100.449997],\n",
              "       [100.830002],\n",
              "       [100.660004],\n",
              "       [ 92.330002],\n",
              "       [ 84.489998],\n",
              "       [ 95.989998],\n",
              "       [ 88.      ],\n",
              "       [ 87.589996],\n",
              "       [ 95.800003],\n",
              "       [ 91.800003],\n",
              "       [100.779999],\n",
              "       [ 97.620003],\n",
              "       [108.419998],\n",
              "       [108.099998],\n",
              "       [108.690002],\n",
              "       [110.760002],\n",
              "       [116.860001],\n",
              "       [118.959999],\n",
              "       [121.150002],\n",
              "       [119.129997],\n",
              "       [114.510002],\n",
              "       [119.809998],\n",
              "       [126.120003],\n",
              "       [133.75    ],\n",
              "       [132.899994],\n",
              "       [139.860001],\n",
              "       [141.630005],\n",
              "       [139.630005],\n",
              "       [139.020004],\n",
              "       [141.100006],\n",
              "       [141.169998],\n",
              "       [141.339996],\n",
              "       [142.850006],\n",
              "       [141.029999],\n",
              "       [141.889999],\n",
              "       [141.919998],\n",
              "       [146.600006],\n",
              "       [145.490005],\n",
              "       [139.789993],\n",
              "       [138.399994],\n",
              "       [135.089996],\n",
              "       [138.600006],\n",
              "       [136.5     ],\n",
              "       [135.860001],\n",
              "       [141.399994],\n",
              "       [143.600006],\n",
              "       [144.449997],\n",
              "       [144.240005],\n",
              "       [145.539993],\n",
              "       [145.089996],\n",
              "       [145.710007],\n",
              "       [143.410004],\n",
              "       [144.75    ],\n",
              "       [145.300003],\n",
              "       [146.470001],\n",
              "       [145.490005],\n",
              "       [145.990005],\n",
              "       [145.539993],\n",
              "       [146.399994],\n",
              "       [145.289993],\n",
              "       [143.669998],\n",
              "       [145.75    ],\n",
              "       [146.050003],\n",
              "       [145.399994],\n",
              "       [144.580002],\n",
              "       [145.910004],\n",
              "       [147.149994],\n",
              "       [146.179993],\n",
              "       [147.770004],\n",
              "       [148.100006],\n",
              "       [147.589996],\n",
              "       [147.429993],\n",
              "       [147.919998],\n",
              "       [147.389999],\n",
              "       [145.259995],\n",
              "       [147.960007],\n",
              "       [148.399994],\n",
              "       [148.690002],\n",
              "       [149.300003],\n",
              "       [147.740005],\n",
              "       [152.940002],\n",
              "       [151.479996],\n",
              "       [152.300003],\n",
              "       [151.75    ],\n",
              "       [148.800003],\n",
              "       [147.210007],\n",
              "       [147.160004],\n",
              "       [148.089996],\n",
              "       [148.179993],\n",
              "       [144.75    ],\n",
              "       [147.139999],\n",
              "       [148.      ],\n",
              "       [138.580002],\n",
              "       [138.029999],\n",
              "       [137.5     ],\n",
              "       [140.220001],\n",
              "       [132.350006],\n",
              "       [131.600006],\n",
              "       [132.770004],\n",
              "       [134.119995],\n",
              "       [130.990005],\n",
              "       [129.529999],\n",
              "       [129.690002],\n",
              "       [130.5     ],\n",
              "       [131.449997],\n",
              "       [130.5     ],\n",
              "       [131.520004],\n",
              "       [132.449997],\n",
              "       [133.149994],\n",
              "       [131.440002],\n",
              "       [132.369995],\n",
              "       [132.529999],\n",
              "       [129.759995],\n",
              "       [130.009995],\n",
              "       [130.130005],\n",
              "       [130.300003],\n",
              "       [129.220001],\n",
              "       [129.100006],\n",
              "       [129.899994],\n",
              "       [130.270004],\n",
              "       [128.690002],\n",
              "       [128.600006],\n",
              "       [128.509995],\n",
              "       [130.800003],\n",
              "       [130.350006],\n",
              "       [130.100006],\n",
              "       [133.139999],\n",
              "       [131.789993],\n",
              "       [134.009995],\n",
              "       [131.990005],\n",
              "       [133.029999],\n",
              "       [137.      ],\n",
              "       [136.410004],\n",
              "       [135.800003],\n",
              "       [136.289993],\n",
              "       [137.850006],\n",
              "       [136.839996],\n",
              "       [135.559998],\n",
              "       [138.119995],\n",
              "       [139.580002],\n",
              "       [139.130005],\n",
              "       [138.919998],\n",
              "       [136.740005],\n",
              "       [136.369995],\n",
              "       [138.289993],\n",
              "       [138.119995],\n",
              "       [134.059998],\n",
              "       [135.770004],\n",
              "       [134.190002],\n",
              "       [135.509995],\n",
              "       [136.199997],\n",
              "       [134.610001],\n",
              "       [133.330002],\n",
              "       [136.789993],\n",
              "       [134.020004],\n",
              "       [133.5     ],\n",
              "       [135.059998],\n",
              "       [135.      ],\n",
              "       [137.309998],\n",
              "       [137.100006],\n",
              "       [137.899994],\n",
              "       [134.929993],\n",
              "       [140.410004],\n",
              "       [139.139999],\n",
              "       [140.990005],\n",
              "       [143.339996],\n",
              "       [144.990005],\n",
              "       [145.759995],\n",
              "       [145.589996],\n",
              "       [143.740005],\n",
              "       [141.399994],\n",
              "       [141.399994],\n",
              "       [141.649994],\n",
              "       [141.25    ],\n",
              "       [142.240005],\n",
              "       [142.460007],\n",
              "       [144.600006],\n",
              "       [144.75    ],\n",
              "       [145.130005],\n",
              "       [144.149994],\n",
              "       [144.009995],\n",
              "       [142.399994],\n",
              "       [140.059998],\n",
              "       [142.179993],\n",
              "       [141.419998],\n",
              "       [142.699997],\n",
              "       [141.399994],\n",
              "       [140.449997],\n",
              "       [139.410004],\n",
              "       [141.      ],\n",
              "       [140.360001],\n",
              "       [139.020004],\n",
              "       [140.119995],\n",
              "       [141.949997],\n",
              "       [141.979996],\n",
              "       [139.509995],\n",
              "       [141.990005],\n",
              "       [140.809998],\n",
              "       [142.050003],\n",
              "       [137.949997],\n",
              "       [135.089996],\n",
              "       [137.589996],\n",
              "       [138.880005],\n",
              "       [137.600006],\n",
              "       [136.509995],\n",
              "       [135.410004],\n",
              "       [133.449997],\n",
              "       [132.020004],\n",
              "       [130.960007],\n",
              "       [131.880005],\n",
              "       [131.960007],\n",
              "       [133.210007],\n",
              "       [133.100006],\n",
              "       [132.710007],\n",
              "       [133.820007],\n",
              "       [134.570007],\n",
              "       [134.25    ],\n",
              "       [134.259995],\n",
              "       [135.289993],\n",
              "       [132.550003],\n",
              "       [133.520004],\n",
              "       [131.5     ],\n",
              "       [133.009995],\n",
              "       [135.029999],\n",
              "       [133.5     ],\n",
              "       [135.350006],\n",
              "       [132.539993],\n",
              "       [135.220001],\n",
              "       [135.380005],\n",
              "       [137.490005],\n",
              "       [139.119995],\n",
              "       [142.190002],\n",
              "       [138.699997],\n",
              "       [135.360001],\n",
              "       [133.110001],\n",
              "       [133.389999],\n",
              "       [131.899994],\n",
              "       [131.770004],\n",
              "       [129.809998],\n",
              "       [131.75    ],\n",
              "       [131.050003],\n",
              "       [127.910004],\n",
              "       [117.730003],\n",
              "       [117.580002],\n",
              "       [115.610001],\n",
              "       [115.      ],\n",
              "       [114.970001],\n",
              "       [113.239998],\n",
              "       [112.699997],\n",
              "       [113.150002],\n",
              "       [111.589996],\n",
              "       [111.559998],\n",
              "       [110.599998],\n",
              "       [110.449997],\n",
              "       [108.400002],\n",
              "       [108.489998],\n",
              "       [108.330002],\n",
              "       [110.099998],\n",
              "       [110.309998],\n",
              "       [112.949997],\n",
              "       [113.029999],\n",
              "       [114.5     ],\n",
              "       [114.120003],\n",
              "       [114.839996],\n",
              "       [114.720001],\n",
              "       [114.040001],\n",
              "       [113.459999],\n",
              "       [114.849998],\n",
              "       [114.      ],\n",
              "       [114.230003],\n",
              "       [114.419998],\n",
              "       [113.449997],\n",
              "       [112.900002],\n",
              "       [113.099998],\n",
              "       [113.650002],\n",
              "       [115.620003],\n",
              "       [114.629997],\n",
              "       [113.400002],\n",
              "       [113.599998],\n",
              "       [112.910004],\n",
              "       [111.400002],\n",
              "       [109.849998],\n",
              "       [109.239998],\n",
              "       [110.209999],\n",
              "       [111.769997],\n",
              "       [110.459999],\n",
              "       [111.050003],\n",
              "       [113.849998],\n",
              "       [112.019997],\n",
              "       [111.410004],\n",
              "       [111.970001],\n",
              "       [110.099998],\n",
              "       [110.300003],\n",
              "       [110.650002],\n",
              "       [110.760002],\n",
              "       [111.470001],\n",
              "       [111.      ],\n",
              "       [111.190002],\n",
              "       [110.620003],\n",
              "       [111.860001],\n",
              "       [110.720001],\n",
              "       [111.449997],\n",
              "       [112.300003],\n",
              "       [111.650002],\n",
              "       [112.18    ],\n",
              "       [111.989998],\n",
              "       [111.800003],\n",
              "       [111.800003],\n",
              "       [109.910004],\n",
              "       [107.940002],\n",
              "       [108.480003],\n",
              "       [108.099998],\n",
              "       [109.110001],\n",
              "       [107.279999],\n",
              "       [104.410004],\n",
              "       [100.489998],\n",
              "       [103.230003],\n",
              "       [106.470001],\n",
              "       [108.75    ],\n",
              "       [110.      ],\n",
              "       [110.870003],\n",
              "       [112.290001],\n",
              "       [112.370003],\n",
              "       [112.870003],\n",
              "       [113.      ],\n",
              "       [112.970001],\n",
              "       [111.989998],\n",
              "       [113.860001],\n",
              "       [112.059998],\n",
              "       [115.620003],\n",
              "       [116.650002],\n",
              "       [116.839996],\n",
              "       [115.75    ],\n",
              "       [114.32    ],\n",
              "       [113.610001],\n",
              "       [113.18    ],\n",
              "       [112.239998],\n",
              "       [112.5     ],\n",
              "       [113.519997],\n",
              "       [116.      ],\n",
              "       [116.529999],\n",
              "       [116.489998],\n",
              "       [117.440002],\n",
              "       [117.110001],\n",
              "       [118.      ],\n",
              "       [118.199997],\n",
              "       [117.449997],\n",
              "       [116.57    ],\n",
              "       [115.739998],\n",
              "       [115.739998],\n",
              "       [116.830002],\n",
              "       [115.199997],\n",
              "       [116.230003],\n",
              "       [113.389999],\n",
              "       [114.449997],\n",
              "       [112.839996],\n",
              "       [112.620003],\n",
              "       [117.059998],\n",
              "       [116.949997],\n",
              "       [119.050003],\n",
              "       [117.419998],\n",
              "       [116.75    ],\n",
              "       [116.099998],\n",
              "       [114.339996],\n",
              "       [111.93    ],\n",
              "       [111.970001],\n",
              "       [112.5     ],\n",
              "       [116.839996],\n",
              "       [116.620003],\n",
              "       [114.830002],\n",
              "       [116.      ],\n",
              "       [117.      ],\n",
              "       [117.949997],\n",
              "       [115.550003],\n",
              "       [117.279999],\n",
              "       [115.650002],\n",
              "       [115.190002],\n",
              "       [114.010002],\n",
              "       [113.309998],\n",
              "       [112.269997],\n",
              "       [111.949997],\n",
              "       [110.580002],\n",
              "       [109.629997],\n",
              "       [108.889999],\n",
              "       [109.580002],\n",
              "       [110.919998],\n",
              "       [109.550003],\n",
              "       [109.25    ],\n",
              "       [110.5     ],\n",
              "       [111.440002],\n",
              "       [110.080002],\n",
              "       [110.      ],\n",
              "       [110.580002],\n",
              "       [111.800003],\n",
              "       [111.900002],\n",
              "       [112.07    ],\n",
              "       [112.580002],\n",
              "       [112.57    ],\n",
              "       [112.489998],\n",
              "       [111.629997],\n",
              "       [111.940002],\n",
              "       [112.440002],\n",
              "       [112.25    ],\n",
              "       [112.93    ],\n",
              "       [112.510002],\n",
              "       [113.300003],\n",
              "       [112.18    ],\n",
              "       [112.379997],\n",
              "       [112.660004],\n",
              "       [113.580002],\n",
              "       [114.050003],\n",
              "       [115.900002],\n",
              "       [116.57    ],\n",
              "       [114.660004],\n",
              "       [113.199997],\n",
              "       [112.5     ],\n",
              "       [113.68    ],\n",
              "       [112.550003],\n",
              "       [112.199997],\n",
              "       [114.      ],\n",
              "       [112.150002],\n",
              "       [110.639999],\n",
              "       [111.839996],\n",
              "       [111.050003],\n",
              "       [112.150002],\n",
              "       [111.540001],\n",
              "       [110.309998],\n",
              "       [110.260002],\n",
              "       [109.82    ],\n",
              "       [108.      ],\n",
              "       [108.050003],\n",
              "       [105.32    ],\n",
              "       [106.25    ],\n",
              "       [105.010002],\n",
              "       [104.5     ],\n",
              "       [104.699997],\n",
              "       [105.879997],\n",
              "       [104.150002],\n",
              "       [104.93    ],\n",
              "       [103.910004],\n",
              "       [104.5     ],\n",
              "       [104.459999],\n",
              "       [106.      ],\n",
              "       [106.07    ],\n",
              "       [107.010002],\n",
              "       [107.      ],\n",
              "       [105.870003],\n",
              "       [107.      ],\n",
              "       [108.169998],\n",
              "       [106.449997],\n",
              "       [103.199997],\n",
              "       [104.730003],\n",
              "       [103.93    ],\n",
              "       [102.089996],\n",
              "       [101.910004],\n",
              "       [100.059998],\n",
              "       [100.360001],\n",
              "       [ 99.760002],\n",
              "       [ 99.690002],\n",
              "       [ 99.760002],\n",
              "       [100.5     ],\n",
              "       [100.550003],\n",
              "       [102.25    ],\n",
              "       [102.809998],\n",
              "       [103.199997],\n",
              "       [104.400002],\n",
              "       [104.220001],\n",
              "       [104.339996],\n",
              "       [105.230003],\n",
              "       [103.25    ],\n",
              "       [102.440002],\n",
              "       [102.440002],\n",
              "       [101.889999],\n",
              "       [100.419998],\n",
              "       [102.25    ],\n",
              "       [101.199997],\n",
              "       [102.349998],\n",
              "       [ 98.709999],\n",
              "       [ 99.110001],\n",
              "       [100.169998],\n",
              "       [100.18    ],\n",
              "       [100.410004],\n",
              "       [ 99.779999],\n",
              "       [101.230003],\n",
              "       [ 99.5     ],\n",
              "       [100.580002],\n",
              "       [100.550003],\n",
              "       [101.18    ],\n",
              "       [101.      ],\n",
              "       [102.669998],\n",
              "       [101.199997],\n",
              "       [100.690002],\n",
              "       [101.      ],\n",
              "       [101.419998],\n",
              "       [100.779999],\n",
              "       [100.919998],\n",
              "       [100.699997],\n",
              "       [101.629997],\n",
              "       [101.360001],\n",
              "       [ 98.43    ],\n",
              "       [ 98.800003],\n",
              "       [100.18    ],\n",
              "       [ 99.010002],\n",
              "       [ 99.5     ],\n",
              "       [100.879997],\n",
              "       [ 99.860001],\n",
              "       [100.849998],\n",
              "       [101.290001],\n",
              "       [101.5     ],\n",
              "       [101.540001],\n",
              "       [102.800003],\n",
              "       [103.559998],\n",
              "       [104.      ],\n",
              "       [104.529999],\n",
              "       [105.830002],\n",
              "       [104.720001],\n",
              "       [104.43    ],\n",
              "       [103.989998],\n",
              "       [103.720001],\n",
              "       [104.      ],\n",
              "       [102.709999],\n",
              "       [102.      ],\n",
              "       [103.199997],\n",
              "       [105.449997],\n",
              "       [108.      ],\n",
              "       [108.      ],\n",
              "       [105.75    ],\n",
              "       [105.309998],\n",
              "       [106.      ],\n",
              "       [106.370003],\n",
              "       [105.190002],\n",
              "       [105.360001],\n",
              "       [103.489998],\n",
              "       [102.639999],\n",
              "       [103.93    ],\n",
              "       [102.550003],\n",
              "       [105.470001],\n",
              "       [107.830002],\n",
              "       [102.879997],\n",
              "       [107.099998],\n",
              "       [109.949997],\n",
              "       [108.620003],\n",
              "       [110.080002],\n",
              "       [111.419998],\n",
              "       [112.099998],\n",
              "       [110.809998],\n",
              "       [110.599998],\n",
              "       [110.959999],\n",
              "       [110.269997],\n",
              "       [110.269997],\n",
              "       [110.970001],\n",
              "       [111.739998],\n",
              "       [111.199997],\n",
              "       [113.07    ],\n",
              "       [111.32    ],\n",
              "       [110.25    ],\n",
              "       [109.959999],\n",
              "       [110.129997],\n",
              "       [110.889999],\n",
              "       [112.68    ],\n",
              "       [112.949997],\n",
              "       [112.190002],\n",
              "       [108.949997],\n",
              "       [108.050003],\n",
              "       [108.      ],\n",
              "       [108.419998],\n",
              "       [108.489998],\n",
              "       [109.489998],\n",
              "       [109.720001],\n",
              "       [111.620003],\n",
              "       [111.330002],\n",
              "       [111.839996],\n",
              "       [111.980003],\n",
              "       [107.290001],\n",
              "       [108.150002],\n",
              "       [107.139999],\n",
              "       [104.870003],\n",
              "       [104.910004],\n",
              "       [105.739998],\n",
              "       [107.169998],\n",
              "       [109.529999],\n",
              "       [106.5     ],\n",
              "       [104.580002],\n",
              "       [105.360001],\n",
              "       [103.5     ]])"
            ]
          },
          "metadata": {},
          "execution_count": 128
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N38m16gfakY6"
      },
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "sc = MinMaxScaler(feature_range=(0, 1))\n",
        "\n",
        "training_data_scaled = sc.fit_transform(training_set)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "brLLps7gan0O",
        "outputId": "4a7cadaa-c614-493c-ec6b-6685b01cc117"
      },
      "source": [
        "training_data_scaled.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1000, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 130
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QrjnvEx4ap0E"
      },
      "source": [
        "X_train = []\n",
        "y_train = []\n",
        "\n",
        "for i in range(60, 1000):\n",
        "  X_train.append(training_data_scaled[i-60:i, 0])\n",
        "  y_train.append(training_data_scaled[i, 0])\n",
        "\n",
        "X_train, y_train = np.array(X_train), np.array(y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ed1-9fQXa3Gm"
      },
      "source": [
        "X_train = np.reshape(X_train, (X_train.shape[0], X_train.shape[1], 1))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L-B7FWeUa5M3",
        "outputId": "a4e6805f-e97c-4636-b8ee-3e383dbac9f4"
      },
      "source": [
        "model = tf.keras.models.Sequential()\n",
        "\n",
        "model.add(tf.keras.layers.LSTM(units=50, return_sequences=True, \n",
        "                               input_shape=(X_train.shape[1], 1)))\n",
        "\n",
        "model.add(tf.keras.layers.Dropout(0.2))\n",
        "\n",
        "model.add(tf.keras.layers.LSTM(units=50, return_sequences=True))\n",
        "\n",
        "model.add(tf.keras.layers.Dropout(0.2))\n",
        "\n",
        "model.add(tf.keras.layers.LSTM(units=50, return_sequences=True))\n",
        "\n",
        "model.add(tf.keras.layers.Dropout(0.2))\n",
        "\n",
        "model.add(tf.keras.layers.LSTM(units=50))\n",
        "\n",
        "model.add(tf.keras.layers.Dropout(0.2))\n",
        "\n",
        "model.add(tf.keras.layers.Dense(units=1))\n",
        "\n",
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_4\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " lstm_16 (LSTM)              (None, 60, 50)            10400     \n",
            "                                                                 \n",
            " dropout_16 (Dropout)        (None, 60, 50)            0         \n",
            "                                                                 \n",
            " lstm_17 (LSTM)              (None, 60, 50)            20200     \n",
            "                                                                 \n",
            " dropout_17 (Dropout)        (None, 60, 50)            0         \n",
            "                                                                 \n",
            " lstm_18 (LSTM)              (None, 60, 50)            20200     \n",
            "                                                                 \n",
            " dropout_18 (Dropout)        (None, 60, 50)            0         \n",
            "                                                                 \n",
            " lstm_19 (LSTM)              (None, 50)                20200     \n",
            "                                                                 \n",
            " dropout_19 (Dropout)        (None, 50)                0         \n",
            "                                                                 \n",
            " dense_4 (Dense)             (None, 1)                 51        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 71,051\n",
            "Trainable params: 71,051\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9NRE958Ra6zR"
      },
      "source": [
        "model.compile(optimizer='adam', loss='mean_squared_error')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h7AZU67Qa9oA",
        "outputId": "06eaa885-f018-472d-8ab1-4da716e08305"
      },
      "source": [
        "modelo = model.fit(X_train, y_train, epochs=100, batch_size=32)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "30/30 [==============================] - 12s 125ms/step - loss: 0.0429\n",
            "Epoch 2/100\n",
            "30/30 [==============================] - 4s 125ms/step - loss: 0.0079\n",
            "Epoch 3/100\n",
            "30/30 [==============================] - 4s 129ms/step - loss: 0.0066\n",
            "Epoch 4/100\n",
            "30/30 [==============================] - 4s 124ms/step - loss: 0.0061\n",
            "Epoch 5/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0058\n",
            "Epoch 6/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0053\n",
            "Epoch 7/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0060\n",
            "Epoch 8/100\n",
            "30/30 [==============================] - 4s 129ms/step - loss: 0.0063\n",
            "Epoch 9/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0050\n",
            "Epoch 10/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0052\n",
            "Epoch 11/100\n",
            "30/30 [==============================] - 4s 124ms/step - loss: 0.0042\n",
            "Epoch 12/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0052\n",
            "Epoch 13/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0046\n",
            "Epoch 14/100\n",
            "30/30 [==============================] - 4s 124ms/step - loss: 0.0045\n",
            "Epoch 15/100\n",
            "30/30 [==============================] - 4s 131ms/step - loss: 0.0038\n",
            "Epoch 16/100\n",
            "30/30 [==============================] - 4s 132ms/step - loss: 0.0044\n",
            "Epoch 17/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0039\n",
            "Epoch 18/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0042\n",
            "Epoch 19/100\n",
            "30/30 [==============================] - 4s 129ms/step - loss: 0.0041\n",
            "Epoch 20/100\n",
            "30/30 [==============================] - 4s 131ms/step - loss: 0.0036\n",
            "Epoch 21/100\n",
            "30/30 [==============================] - 4s 129ms/step - loss: 0.0038\n",
            "Epoch 22/100\n",
            "30/30 [==============================] - 4s 125ms/step - loss: 0.0036\n",
            "Epoch 23/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0041\n",
            "Epoch 24/100\n",
            "30/30 [==============================] - 4s 133ms/step - loss: 0.0041\n",
            "Epoch 25/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0035\n",
            "Epoch 26/100\n",
            "30/30 [==============================] - 4s 125ms/step - loss: 0.0033\n",
            "Epoch 27/100\n",
            "30/30 [==============================] - 4s 124ms/step - loss: 0.0031\n",
            "Epoch 28/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0036\n",
            "Epoch 29/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0034\n",
            "Epoch 30/100\n",
            "30/30 [==============================] - 4s 125ms/step - loss: 0.0036\n",
            "Epoch 31/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0034\n",
            "Epoch 32/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0030\n",
            "Epoch 33/100\n",
            "30/30 [==============================] - 4s 131ms/step - loss: 0.0030\n",
            "Epoch 34/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0030\n",
            "Epoch 35/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0030\n",
            "Epoch 36/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0026\n",
            "Epoch 37/100\n",
            "30/30 [==============================] - 4s 134ms/step - loss: 0.0031\n",
            "Epoch 38/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0025\n",
            "Epoch 39/100\n",
            "30/30 [==============================] - 4s 129ms/step - loss: 0.0029\n",
            "Epoch 40/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0026\n",
            "Epoch 41/100\n",
            "30/30 [==============================] - 4s 132ms/step - loss: 0.0028\n",
            "Epoch 42/100\n",
            "30/30 [==============================] - 4s 129ms/step - loss: 0.0029\n",
            "Epoch 43/100\n",
            "30/30 [==============================] - 4s 135ms/step - loss: 0.0030\n",
            "Epoch 44/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0025\n",
            "Epoch 45/100\n",
            "30/30 [==============================] - 4s 131ms/step - loss: 0.0024\n",
            "Epoch 46/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0026\n",
            "Epoch 47/100\n",
            "30/30 [==============================] - 4s 134ms/step - loss: 0.0027\n",
            "Epoch 48/100\n",
            "30/30 [==============================] - 4s 123ms/step - loss: 0.0025\n",
            "Epoch 49/100\n",
            "30/30 [==============================] - 4s 125ms/step - loss: 0.0025\n",
            "Epoch 50/100\n",
            "30/30 [==============================] - 4s 135ms/step - loss: 0.0028\n",
            "Epoch 51/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0022\n",
            "Epoch 52/100\n",
            "30/30 [==============================] - 4s 131ms/step - loss: 0.0023\n",
            "Epoch 53/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0024\n",
            "Epoch 54/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0025\n",
            "Epoch 55/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0024\n",
            "Epoch 56/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0025\n",
            "Epoch 57/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0023\n",
            "Epoch 58/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0024\n",
            "Epoch 59/100\n",
            "30/30 [==============================] - 4s 123ms/step - loss: 0.0023\n",
            "Epoch 60/100\n",
            "30/30 [==============================] - 4s 120ms/step - loss: 0.0025\n",
            "Epoch 61/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0025\n",
            "Epoch 62/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0023\n",
            "Epoch 63/100\n",
            "30/30 [==============================] - 4s 125ms/step - loss: 0.0024\n",
            "Epoch 64/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0021\n",
            "Epoch 65/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0020\n",
            "Epoch 66/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0020\n",
            "Epoch 67/100\n",
            "30/30 [==============================] - 4s 124ms/step - loss: 0.0022\n",
            "Epoch 68/100\n",
            "30/30 [==============================] - 4s 121ms/step - loss: 0.0022\n",
            "Epoch 69/100\n",
            "30/30 [==============================] - 4s 122ms/step - loss: 0.0021\n",
            "Epoch 70/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0021\n",
            "Epoch 71/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0021\n",
            "Epoch 72/100\n",
            "30/30 [==============================] - 4s 131ms/step - loss: 0.0020\n",
            "Epoch 73/100\n",
            "30/30 [==============================] - 4s 124ms/step - loss: 0.0020\n",
            "Epoch 74/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0020\n",
            "Epoch 75/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0020\n",
            "Epoch 76/100\n",
            "30/30 [==============================] - 4s 133ms/step - loss: 0.0019\n",
            "Epoch 77/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0020\n",
            "Epoch 78/100\n",
            "30/30 [==============================] - 4s 124ms/step - loss: 0.0022\n",
            "Epoch 79/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0020\n",
            "Epoch 80/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0021\n",
            "Epoch 81/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0018\n",
            "Epoch 82/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0019\n",
            "Epoch 83/100\n",
            "30/30 [==============================] - 4s 123ms/step - loss: 0.0019\n",
            "Epoch 84/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0020\n",
            "Epoch 85/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0016\n",
            "Epoch 86/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0017\n",
            "Epoch 87/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0018\n",
            "Epoch 88/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0017\n",
            "Epoch 89/100\n",
            "30/30 [==============================] - 4s 127ms/step - loss: 0.0016\n",
            "Epoch 90/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0018\n",
            "Epoch 91/100\n",
            "30/30 [==============================] - 4s 133ms/step - loss: 0.0016\n",
            "Epoch 92/100\n",
            "30/30 [==============================] - 4s 125ms/step - loss: 0.0020\n",
            "Epoch 93/100\n",
            "30/30 [==============================] - 4s 132ms/step - loss: 0.0018\n",
            "Epoch 94/100\n",
            "30/30 [==============================] - 4s 133ms/step - loss: 0.0015\n",
            "Epoch 95/100\n",
            "30/30 [==============================] - 4s 131ms/step - loss: 0.0015\n",
            "Epoch 96/100\n",
            "30/30 [==============================] - 4s 131ms/step - loss: 0.0016\n",
            "Epoch 97/100\n",
            "30/30 [==============================] - 4s 130ms/step - loss: 0.0017\n",
            "Epoch 98/100\n",
            "30/30 [==============================] - 4s 126ms/step - loss: 0.0015\n",
            "Epoch 99/100\n",
            "30/30 [==============================] - 4s 125ms/step - loss: 0.0014\n",
            "Epoch 100/100\n",
            "30/30 [==============================] - 4s 128ms/step - loss: 0.0016\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "LFaIt_2ObAE3",
        "outputId": "5700711d-4668-4734-c79a-1822aff26e0f"
      },
      "source": [
        "plt.plot(modelo.history['loss'])\n",
        "plt.xlabel('Epochs')\n",
        "plt.ylabel('Loss')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": "OK"
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "fFS5_bG0bXNG",
        "outputId": "8e66a20b-fc1d-4d40-d164-cb5da8f57ce3"
      },
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-0c2a8ad7-c575-410b-a0e7-a03610ebd7f9\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-0c2a8ad7-c575-410b-a0e7-a03610ebd7f9\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving test_data4.csv to test_data4.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fYfWGYXFdFc1"
      },
      "source": [
        "import io\n",
        "test_data = pd.read_csv(io.BytesIO(uploaded['test_data4.csv']))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K_ywSkyzdHWE"
      },
      "source": [
        "test_data.drop(columns='Unnamed: 0', inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HiJ64bPPdJa7"
      },
      "source": [
        "real_stock_price = test_data.iloc[: , 3:4].values"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "bQ19SfHsdMeT",
        "outputId": "caffaf40-c787-4ae0-e513-e809f141da0a"
      },
      "source": [
        "test_data"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Close/Last</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2017-11-28</td>\n",
              "      <td>103.410004</td>\n",
              "      <td>8401100</td>\n",
              "      <td>102.559998</td>\n",
              "      <td>103.879997</td>\n",
              "      <td>102.169998</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-11-27</td>\n",
              "      <td>102.790001</td>\n",
              "      <td>4007500</td>\n",
              "      <td>102.629997</td>\n",
              "      <td>102.970001</td>\n",
              "      <td>102.379997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2017-11-24</td>\n",
              "      <td>102.639999</td>\n",
              "      <td>2217600</td>\n",
              "      <td>102.910004</td>\n",
              "      <td>102.919998</td>\n",
              "      <td>102.449997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2017-11-22</td>\n",
              "      <td>102.739998</td>\n",
              "      <td>4140700</td>\n",
              "      <td>103.220001</td>\n",
              "      <td>103.320000</td>\n",
              "      <td>102.690002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2017-11-21</td>\n",
              "      <td>103.000000</td>\n",
              "      <td>5725900</td>\n",
              "      <td>102.970001</td>\n",
              "      <td>103.169998</td>\n",
              "      <td>102.790001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>253</th>\n",
              "      <td>2016-11-25</td>\n",
              "      <td>98.820000</td>\n",
              "      <td>4396800</td>\n",
              "      <td>98.709999</td>\n",
              "      <td>99.070000</td>\n",
              "      <td>98.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>254</th>\n",
              "      <td>2016-11-23</td>\n",
              "      <td>98.260002</td>\n",
              "      <td>5897400</td>\n",
              "      <td>97.669998</td>\n",
              "      <td>98.279999</td>\n",
              "      <td>97.589996</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>255</th>\n",
              "      <td>2016-11-22</td>\n",
              "      <td>97.709999</td>\n",
              "      <td>5323700</td>\n",
              "      <td>97.400002</td>\n",
              "      <td>97.930000</td>\n",
              "      <td>97.269997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>256</th>\n",
              "      <td>2016-11-21</td>\n",
              "      <td>97.629997</td>\n",
              "      <td>10771100</td>\n",
              "      <td>98.110001</td>\n",
              "      <td>98.269997</td>\n",
              "      <td>97.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>2016-11-18</td>\n",
              "      <td>98.239998</td>\n",
              "      <td>8586100</td>\n",
              "      <td>99.050003</td>\n",
              "      <td>99.370003</td>\n",
              "      <td>98.139999</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>258 rows × 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "           Date  Close/Last    Volume        Open        High         Low\n",
              "0    2017-11-28  103.410004   8401100  102.559998  103.879997  102.169998\n",
              "1    2017-11-27  102.790001   4007500  102.629997  102.970001  102.379997\n",
              "2    2017-11-24  102.639999   2217600  102.910004  102.919998  102.449997\n",
              "3    2017-11-22  102.739998   4140700  103.220001  103.320000  102.690002\n",
              "4    2017-11-21  103.000000   5725900  102.970001  103.169998  102.790001\n",
              "..          ...         ...       ...         ...         ...         ...\n",
              "253  2016-11-25   98.820000   4396800   98.709999   99.070000   98.500000\n",
              "254  2016-11-23   98.260002   5897400   97.669998   98.279999   97.589996\n",
              "255  2016-11-22   97.709999   5323700   97.400002   97.930000   97.269997\n",
              "256  2016-11-21   97.629997  10771100   98.110001   98.269997   97.000000\n",
              "257  2016-11-18   98.239998   8586100   99.050003   99.370003   98.139999\n",
              "\n",
              "[258 rows x 6 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f3C5GvwydbXu"
      },
      "source": [
        "dataset_total = pd.concat([train_data['Open'], test_data['Open']], axis=0)\n",
        "inputs = dataset_total[len(dataset_total) - len(test_data) - 60:].values\n",
        "inputs = inputs.reshape(-1,1)\n",
        "inputs = sc.transform(inputs)\n",
        "X_test = []\n",
        "for i in range(60, 259):\n",
        "    X_test.append(inputs[i-60:i, 0])\n",
        "X_test = np.array(X_test)\n",
        "X_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], 1))\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "65HKFHJ0eA9R"
      },
      "source": [
        "predicted_stock_price = model.predict(X_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YWR6vxOBd-Gq"
      },
      "source": [
        "predicted_stock_price = sc.inverse_transform(predicted_stock_price)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 361
        },
        "id": "NlRHZO-Rfib_",
        "outputId": "f1c5f147-33e9-47d9-e1c2-1ff9c564d33c"
      },
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "plt.plot(real_stock_price, color='black', label='Disney Stock Price')\n",
        "plt.plot(predicted_stock_price, color='red', label='Predicted Disney Stock Price')\n",
        "\n",
        "plt.title('Disney Stock Price Prediction')\n",
        "plt.xlabel('Time')\n",
        "plt.xlabel('Disney Stock Price')\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}